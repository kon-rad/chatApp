[{"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/index.js":"1","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/App.js":"2","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/rootReducer.js":"3","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/pages/Login.js":"4","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/pages/ChatHome.js":"5","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/rooms.js":"6","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/currentUser.js":"7","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/roomsDetail.js":"8","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/apis/roomsApi.js":"9","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/TextInput.js":"10","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/Button.js":"11","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/messages.js":"12","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/molecules/UserInfo.js":"13","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/Heading2.js":"14","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/molecules/RoomsList.js":"15","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/organisms/RoomDetail.js":"16","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/Message.js":"17","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/utils/hooks.js":"18"},{"size":629,"mtime":1608767308513,"results":"19","hashOfConfig":"20"},{"size":436,"mtime":1608759193467,"results":"21","hashOfConfig":"20"},{"size":342,"mtime":1608781754228,"results":"22","hashOfConfig":"20"},{"size":1329,"mtime":1608781763919,"results":"23","hashOfConfig":"20"},{"size":2296,"mtime":1608783384198,"results":"24","hashOfConfig":"20"},{"size":561,"mtime":1608785275407,"results":"25","hashOfConfig":"20"},{"size":649,"mtime":1608785281179,"results":"26","hashOfConfig":"20"},{"size":649,"mtime":1608785273576,"results":"27","hashOfConfig":"20"},{"size":108,"mtime":1608782083849,"results":"28","hashOfConfig":"20"},{"size":436,"mtime":1608781341831,"results":"29","hashOfConfig":"20"},{"size":416,"mtime":1608780614259,"results":"30","hashOfConfig":"20"},{"size":1158,"mtime":1608785278671,"results":"31","hashOfConfig":"20"},{"size":469,"mtime":1608782219741,"results":"32","hashOfConfig":"20"},{"size":218,"mtime":1608775943416,"results":"33","hashOfConfig":"20"},{"size":600,"mtime":1608782032009,"results":"34","hashOfConfig":"20"},{"size":3229,"mtime":1608784103992,"results":"35","hashOfConfig":"20"},{"size":533,"mtime":1608779065363,"results":"36","hashOfConfig":"20"},{"size":492,"mtime":1608783010113,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"xawx4j",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/index.js",[],["79","80"],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/App.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/rootReducer.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/pages/Login.js",["81"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TextInput from \"../components/atoms/TextInput\";\nimport Button from \"../components/atoms/Button\";\nimport { loginUser } from \"../reducers/currentUser\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (!username) return;\n    dispatch(loginUser(username));\n    history.push(\"/chat\");\n  };\n  // handle submit on enter key\n  const handleOnKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      event.stopPropagation();\n      handleSubmit(event);\n    }\n  };\n  return (\n    <div className=\"Login__container\">\n      <div className=\"Login\">\n        <TextInput\n          name=\"username\"\n          className=\"Login__input\"\n          onChange={(e) => setUsername(e.target.value)}\n          value={username}\n          placeholder=\"Type your username...\"\n          onKeyDown={handleOnKeyDown}\n        />\n        <Button className=\"Login__submit\" onClick={handleSubmit}>\n          Join the DoorDash Chat!\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/pages/ChatHome.js",["82"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchRooms } from \"../reducers/rooms\";\nimport { useInterval } from \"../utils/hooks\";\nimport RoomDetail from \"../components/organisms/RoomDetail\";\nimport UserInfo from \"../components/molecules/UserInfo\";\nimport RoomsList from \"../components/molecules/RoomsList\";\nimport \"./ChatHome.css\";\n\nconst ChatHome = (props) => {\n  const [currentRoomId, setCurrentRoomId] = useState();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const history = useHistory();\n  // user must log in before being allowed to navigate to chat page\n  const isLoggedIn = useSelector((state) => state.currentUser.isLoggedIn);\n  if (!isLoggedIn) history.push(\"/\");\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRooms());\n  }, []);\n\n  const username = useSelector((state) => state.currentUser.username);\n  const startTime = useSelector((state) => state.currentUser.startTime);\n\n  // cause a rerender every minute to update time online\n  useInterval(() => {\n    setCurrentTime(new Date());\n  }, 60000);\n\n  const rooms = useSelector((state) => state.rooms.data);\n\n  let currentRoom;\n  // check if rooms have loaded\n  if (rooms.length > 0) {\n    // if currentRoomId is not set, default to the first room in list\n    if (currentRoomId === undefined) {\n      currentRoom = rooms[0];\n    } else {\n      currentRoom = rooms.find((room) => room.id === currentRoomId);\n    }\n  }\n\n  const minutesOnline = getMinutesElapsed(startTime, currentTime);\n  return (\n    <div className=\"ChatHome__container\">\n      <div className=\"ChatHome\">\n        <UserInfo username={username} minutesOnline={minutesOnline} />\n        <RoomsList\n          rooms={rooms}\n          currentRoomName={currentRoom && currentRoom.name}\n          onClick={(id) => setCurrentRoomId(id)}\n        />\n      </div>\n      {currentRoom && (\n        <RoomDetail {...currentRoom} currentUserName={username} />\n      )}\n    </div>\n  );\n};\n\nconst getMinutesElapsed = (startTime, currentTime) => {\n  // get timeDiff in ms\n  const timeDiff = currentTime - startTime;\n  // convert ms to minutes and round up\n  return Math.ceil(timeDiff / 60000);\n};\n\nexport default ChatHome;\n","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/rooms.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/currentUser.js",["83"],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/roomsDetail.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/apis/roomsApi.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/TextInput.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/Button.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/messages.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/molecules/UserInfo.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/Heading2.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/molecules/RoomsList.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/organisms/RoomDetail.js",["84","85"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchRoomsDetail } from \"../../reducers/roomsDetail\";\nimport { fetchRoomMessages, postMessage } from \"../../reducers/messages\";\nimport { useInterval } from \"../../utils/hooks\";\nimport TextInput from \"../atoms/TextInput\";\nimport Message from \"../atoms/Message\";\nimport Button from \"../atoms/Button\";\nimport \"./RoomDetail.css\";\n\nconst RoomDetail = ({ id, name, currentUserName }) => {\n  const dispatch = useDispatch();\n  // fetch rooms detail and messages when room id prop changes\n  useEffect(() => {\n    dispatch(fetchRoomsDetail(id));\n    dispatch(fetchRoomMessages(id));\n  }, [id]);\n\n  // polling for new messages\n  useInterval(() => {\n    dispatch(fetchRoomMessages(id));\n  }, 1000);\n\n  const [messageInputValue, setMessageInputValue] = useState(\"\");\n  const userNamesList = useSelector(\n    ({ roomsDetail }) => roomsDetail[id] && roomsDetail[id].users\n  );\n  const messages = useSelector(({ messages }) => messages[id] && messages[id]);\n\n  // scroll to bottom of messages list when messages are updated\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(scrollToBottom, [(messages || []).length]);\n  const messagesEndRef = useRef(null);\n\n  const messageSubmit = () => {\n    // dispatch thunk to post message\n    dispatch(postMessage(id, currentUserName, messageInputValue));\n    // clear message text state\n    setMessageInputValue(\"\");\n    scrollToBottom();\n  };\n  // submit message on enter key\n  const handleOnKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      event.stopPropagation();\n      messageSubmit();\n    }\n  };\n\n  return (\n    <div className=\"RoomDetail__container\">\n      <div className=\"RoomDetail__header\">\n        <h1 className=\"RoomDetail__title\">{name}</h1>\n        <div className=\"RoomDetail__users\">\n          <span className=\"RoomDetail__currentUserName\">{currentUserName}</span>\n          {userNamesList && userNamesList.length > 0 && \", \"}\n          {userNamesList &&\n            userNamesList.filter((name) => name !== currentUserName).join(\", \")}\n        </div>\n      </div>\n      <div className=\"RoomDetail__messages\">\n        {messages &&\n          messages.map((msg, i) => {\n            return (\n              <Message\n                isCurrentUser={msg.name === currentUserName}\n                author={msg.name}\n                key={`${msg.name}_${i}`}\n              >\n                {msg.message}\n              </Message>\n            );\n          })}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"RoomDetail__inputContainer\">\n        <TextInput\n          placeholder=\"Type a message...\"\n          name=\"message_input\"\n          value={messageInputValue}\n          onChange={(e) => setMessageInputValue(e.target.value)}\n          className=\"RoomDetail__textInput\"\n          onKeyDown={handleOnKeyDown}\n        />\n        <Button\n          type=\"link\"\n          className=\"RoomDetail__submitButton\"\n          onClick={messageSubmit}\n        >\n          Send\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomDetail;\n","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/Message.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/utils/hooks.js",["86","87"],"import React, { useState, useEffect, useRef } from \"react\";\n\nexport const useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":23,"nodeType":"94","messageId":"95","endLine":2,"endColumn":34},{"ruleId":"96","severity":1,"message":"97","line":22,"column":6,"nodeType":"98","endLine":22,"endColumn":8,"suggestions":"99"},{"ruleId":"92","severity":1,"message":"100","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},{"ruleId":"96","severity":1,"message":"97","line":17,"column":6,"nodeType":"98","endLine":17,"endColumn":10,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":34,"column":30,"nodeType":"103","endLine":34,"endColumn":53},{"ruleId":"92","severity":1,"message":"104","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},{"ruleId":"92","severity":1,"message":"105","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'Login' is defined but never used.",["109"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'React' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [dispatch]",{"range":"114","text":"115"},"Update the dependencies array to be: [dispatch, id]",{"range":"116","text":"117"},[901,903],"[dispatch]",[703,707],"[dispatch, id]"]