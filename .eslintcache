[{"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/index.js":"1","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/App.js":"2","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/rootReducer.js":"3","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/pages/Login.js":"4","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/pages/ChatHome.js":"5","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/rooms.js":"6","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/currentUser.js":"7","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/roomsDetail.js":"8","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/apis/roomsApi.js":"9","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/organisms/ChatRoomDetail.js":"10","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/TextInput.js":"11","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/Button.js":"12"},{"size":629,"mtime":1608767308513,"results":"13","hashOfConfig":"14"},{"size":436,"mtime":1608759193467,"results":"15","hashOfConfig":"14"},{"size":294,"mtime":1608769775145,"results":"16","hashOfConfig":"14"},{"size":1115,"mtime":1608763800318,"results":"17","hashOfConfig":"14"},{"size":1951,"mtime":1608769943342,"results":"18","hashOfConfig":"14"},{"size":521,"mtime":1608764934709,"results":"19","hashOfConfig":"14"},{"size":528,"mtime":1608768465865,"results":"20","hashOfConfig":"14"},{"size":609,"mtime":1608770106555,"results":"21","hashOfConfig":"14"},{"size":108,"mtime":1608765133169,"results":"22","hashOfConfig":"14"},{"size":1005,"mtime":1608770531961,"results":"23","hashOfConfig":"14"},{"size":261,"mtime":1608757532541,"results":"24","hashOfConfig":"14"},{"size":249,"mtime":1608758566330,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"xawx4j",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/index.js",[],["55","56"],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/App.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/rootReducer.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/pages/Login.js",["57"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TextInput from \"../components/atoms/TextInput\";\nimport Button from \"../components/atoms/Button\";\nimport { loginUser } from \"../reducers/currentUser\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (!username) return;\n    dispatch(loginUser(username));\n    history.push(\"/chat\");\n  };\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-xs-12 col-md-12 posts__title\">\n          <TextInput\n            name=\"username\"\n            className=\"username_input\"\n            handleOnChange={(e) => setUsername(e.target.value)}\n          />\n          <Button className=\"login_submit\" handleOnClick={handleSubmit}>\n            Join the DoorDash Chat!\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/pages/ChatHome.js",["58","59"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchRooms } from \"../reducers/rooms\";\nimport ChatRoomDetail from \"../components/organisms/ChatRoomDetail\";\nimport \"./ChatHome.css\";\n\nconst ChatHome = (props) => {\n  const { roomId, setRoomId } = useState();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(fetchRooms());\n  }, []);\n  const username = useSelector((state) => state.currentUser.username);\n  const isLoggedIn = useSelector((state) => state.currentUser.isLoggedIn);\n  const chatRoomNames = useSelector((state) =>\n    state.rooms.data.map((r) => r.name)\n  );\n  const chatRooms = useSelector((state) => state.rooms.data);\n  console.log(\"chatRooms\", chatRooms, roomId);\n  // user must log in before being allowed to navigate to chat page\n  if (!isLoggedIn) history.push(\"/\");\n  let currentRoom;\n  // check if rooms have loaded\n  if (chatRooms.length > 0) {\n    // if roomId is not set, default to the first room in list\n    if (roomId === undefined) {\n      currentRoom = chatRooms[0];\n    } else {\n      currentRoom = chatRooms.find((room) => room.id === roomId);\n    }\n  }\n  console.log(\"currentRoom\", currentRoom);\n\n  let minutesOnline = 13;\n  let timeOnlineCopy = `${minutesOnline} minutes`;\n  return (\n    <div className=\"ChatHome__container\">\n      <div className=\"ChatroomList\">\n        <div className=\"UserInfo\">\n          {username}\n          <div className=\"UserInfo__time\">Online for {timeOnlineCopy}</div>\n        </div>\n        <div className=\"ChatroomList__list\">\n          {chatRoomNames.map((name, i) => (\n            <div key={`${name}_${i}`} className=\"ChatroomList__name\">\n              {name}\n            </div>\n          ))}\n        </div>\n      </div>\n      {currentRoom && <ChatRoomDetail {...currentRoom} />}\n    </div>\n  );\n};\n\nexport default ChatHome;\n","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/rooms.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/currentUser.js",["60"],"import Login from \"../pages/Login\";\n\nconst LOGIN = \"LOGIN\";\n\nexport const loginUser = (username) => {\n  return {\n    type: LOGIN,\n    payload: username,\n  };\n};\n\nconst initState = {\n  // todo reset after dev complete\n  username: \"test 1\",\n  isLoggedIn: true,\n};\n\nconst currentUser = (state = initState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        username: action.payload,\n        isLoggedIn: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default currentUser;\n","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/reducers/roomsDetail.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/apis/roomsApi.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/organisms/ChatRoomDetail.js",["61","62"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchRoomsDetail } from \"../../reducers/roomsDetail\";\nimport \"./ChatRoomDetail.css\";\n\nconst ChatRoomDetail = ({ id, name, users, messages }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRoomsDetail(id));\n  }, []);\n  // todo: add current user and make highlight style\n  const userNamesList = useSelector(\n    ({ roomsDetail }) => roomsDetail[id] && roomsDetail[id].users\n  );\n\n  return (\n    <div className=\"Chatroom__mainContainer\">\n      <div className=\"Chatroom__main\">\n        <h1 className=\"Chatroom__title\">{name}</h1>\n        <div className=\"Chatroom__users\">\n          {userNamesList && userNamesList.map((name) => <div>{name}</div>)}\n        </div>\n      </div>\n      <div className=\"Messages__list\">messages list ...</div>\n      <div className=\"UserInput__container\">user input send button</div>\n    </div>\n  );\n};\n\nexport default ChatRoomDetail;\n","/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/TextInput.js",[],"/Users/konradgnat/Documents/macbookPro/apps/Frontend-Interview-Project-master/src/components/atoms/Button.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":23,"nodeType":"69","messageId":"70","endLine":2,"endColumn":34},{"ruleId":"67","severity":1,"message":"71","line":9,"column":19,"nodeType":"69","messageId":"70","endLine":9,"endColumn":28},{"ruleId":"72","severity":1,"message":"73","line":14,"column":6,"nodeType":"74","endLine":14,"endColumn":8,"suggestions":"75"},{"ruleId":"67","severity":1,"message":"76","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"77","line":1,"column":28,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"78","line":10,"column":6,"nodeType":"74","endLine":10,"endColumn":8,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'setRoomId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'Login' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [dispatch]",{"range":"88","text":"89"},"Update the dependencies array to be: [dispatch, id]",{"range":"90","text":"91"},[491,493],"[dispatch]",[358,360],"[dispatch, id]"]